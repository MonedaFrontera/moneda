package org.domain.moneda.entity;

// Generated 23/12/2011 07:58:00 AM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Establecimiento generated by hbm2java
 */
@Entity
@Table(name = "establecimiento", schema = "public")
public class Establecimiento implements java.io.Serializable {

	private String codigounico;
	private Pais pais;
	private Empresa empresa;
	private String nombreestable;
	private Bancocol bancocol;
	private String direccion;
	private String telefono;
	private BigDecimal porcentaje;
	private Boolean iva;
	private Boolean facturar;
	private String numcuenta;
	private Set<Puntoestablecimiento> puntoestablecimientos = new HashSet<Puntoestablecimiento>(
			0);
	private Set<Transaccion> transaccions = new HashSet<Transaccion>(0);
	
	private Set<Franquiciaestablecimiento> franquiciaestablecimientos = new HashSet<Franquiciaestablecimiento>(
			0);
	private Set<Autovoz> autovozs = new HashSet<Autovoz>(0);
	private Set<Gravamenestablecimiento> gravamenestablecimientos = new HashSet<Gravamenestablecimiento>(
			0);
	private Set<Inventario> inventarios = new HashSet<Inventario>(0);
	private Set<Factura> facturas = new HashSet<Factura>(0);

	public Establecimiento() {
	}

	public Establecimiento(String codigounico, String nombreestable) {
		this.codigounico = codigounico;
		this.nombreestable = nombreestable;
	}

	public Establecimiento(String codigounico, Pais pais, Empresa empresa,
			String nombreestable, String direccion, String telefono,
			BigDecimal porcentaje, Boolean iva, Boolean facturar,
			Set<Puntoestablecimiento> puntoestablecimientos,
			Set<Franquiciaestablecimiento> franquiciaestablecimientos,
			Set<Transaccion> transaccions, Bancocol bancocol, String numcuenta, Set<Autovoz> autovozs,
			Set<Gravamenestablecimiento> gravamenestablecimientos, Set<Inventario> inventarios,
			Set<Factura> facturas) {
		   this.codigounico = codigounico;
	       this.pais = pais;
	       this.empresa = empresa;
	       this.bancocol = bancocol;
	       this.nombreestable = nombreestable;
	       this.direccion = direccion;
	       this.telefono = telefono;
	       this.porcentaje = porcentaje;
	       this.iva = iva;
	       this.facturar = facturar;
	       this.numcuenta = numcuenta;
	       this.franquiciaestablecimientos = franquiciaestablecimientos;
	       this.puntoestablecimientos = puntoestablecimientos;
	       this.transaccions = transaccions;
		   this.autovozs = autovozs;
		   this.inventarios = inventarios;
		   this.facturas = facturas;
	}

	@Id
	@Column(name = "codigounico", unique = true, nullable = false, length = 8)
	@NotNull
	@Length(max = 8)
	public String getCodigounico() {
		return this.codigounico;
	}

	public void setCodigounico(String codigounico) {
		this.codigounico = codigounico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codpais")
	public Pais getPais() {
		return this.pais;
	}

	public void setPais(Pais pais) {
		this.pais = pais;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nit")
	public Empresa getEmpresa() {
		return this.empresa;
	}

	public void setEmpresa(Empresa empresa) {
		this.empresa = empresa;
	}

	@Column(name = "nombreestable", nullable = false, length = 30)
	@NotNull
	@Length(max = 30)
	public String getNombreestable() {
		return this.nombreestable;
	}

	public void setNombreestable(String nombreestable) {
		this.nombreestable = nombreestable;
	}

	@Column(name = "direccion", length = 50)
	@Length(max = 50)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "telefono", length = 15)
	@Length(max = 15)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "porcentaje", precision = 5, scale = 3)
	public BigDecimal getPorcentaje() {
		return this.porcentaje;
	}

	public void setPorcentaje(BigDecimal porcentaje) {
		this.porcentaje = porcentaje;
	}

	@Column(name = "iva")
	public void setIva(Boolean iva) {
		this.iva = iva;
	}
	
	public Boolean getIva() {
		return iva;
	}
	
	@Column(name = "facturar")
	public void setFacturar(Boolean facturar) {
		this.facturar = facturar;
	}
	
	public Boolean getFacturar() {
		return facturar;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Puntoestablecimiento> getPuntoestablecimientos() {
		return this.puntoestablecimientos;
	}

	public void setPuntoestablecimientos(
			Set<Puntoestablecimiento> puntoestablecimientos) {
		this.puntoestablecimientos = puntoestablecimientos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Transaccion> getTransaccions() {
		return this.transaccions;
	}

	public void setTransaccions(Set<Transaccion> transaccions) {
		this.transaccions = transaccions;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Franquiciaestablecimiento> getFranquiciaestablecimientos() {
		return this.franquiciaestablecimientos;
	}

	public void setFranquiciaestablecimientos(
			Set<Franquiciaestablecimiento> franquiciaestablecimientos) {
		this.franquiciaestablecimientos = franquiciaestablecimientos;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codbanco")
    public Bancocol getBancocol() {
        return this.bancocol;
    }
    
    public void setBancocol(Bancocol bancocol) {
        this.bancocol = bancocol;
    }

    @Column(name="numcuenta", length=20)
    @Length(max=20)
    public String getNumcuenta() {
        return this.numcuenta;
    }
    
    public void setNumcuenta(String numcuenta) {
        this.numcuenta = numcuenta;
    }
    
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Autovoz> getAutovozs() {
		return this.autovozs;
	}

	public void setAutovozs(Set<Autovoz> autovozs) {
		this.autovozs = autovozs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Gravamenestablecimiento> getGravamenestablecimientos() {
		return this.gravamenestablecimientos;
	}

	public void setGravamenestablecimientos(
			Set<Gravamenestablecimiento> gravamenestablecimientos) {
		this.gravamenestablecimientos = gravamenestablecimientos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Inventario> getInventarios() {
		return this.inventarios;
	}

	public void setInventarios(Set<Inventario> inventarios) {
		this.inventarios = inventarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "establecimiento")
	public Set<Factura> getFacturas() {
		return this.facturas;
	}

	public void setFacturas(Set<Factura> facturas) {
		this.facturas = facturas;
	}

}
