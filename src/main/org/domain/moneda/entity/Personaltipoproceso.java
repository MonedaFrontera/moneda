package org.domain.moneda.entity;

// Generated 31/01/2012 05:11:45 AM by Hibernate Tools 3.2.4.GA

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.NotNull;

/**
 * Personaltipoproceso generated by hbm2java
 */
@Entity
@Table(name = "personaltipoproceso", schema = "public")
public class Personaltipoproceso implements java.io.Serializable {

	private PersonaltipoprocesoId id;
	private Personal personal;
	private Puntodeventa puntodeventa;
	private Tipoproceso tipoproceso;
	private Date fechafin;
	private BigDecimal porcentaje;

	public Personaltipoproceso() {
	}

	public Personaltipoproceso(PersonaltipoprocesoId id, Personal personal,
			Puntodeventa puntodeventa, Tipoproceso tipoproceso) {
		this.id = id;
		this.personal = personal;
		this.puntodeventa = puntodeventa;
		this.tipoproceso = tipoproceso;
	}

	public Personaltipoproceso(PersonaltipoprocesoId id, Personal personal,
			Puntodeventa puntodeventa, Tipoproceso tipoproceso, Date fechafin,
			BigDecimal porcentaje) {
		this.id = id;
		this.personal = personal;
		this.puntodeventa = puntodeventa;
		this.tipoproceso = tipoproceso;
		this.fechafin = fechafin;
		this.porcentaje = porcentaje;
	}

	@EmbeddedId
	@AttributeOverrides( {
			@AttributeOverride(name = "tipoproceso", column = @Column(name = "tipoproceso", nullable = false, length = 2)),
			@AttributeOverride(name = "documento", column = @Column(name = "documento", nullable = false, length = 15)),
			@AttributeOverride(name = "fechainicio", column = @Column(name = "fechainicio", nullable = false, length = 13)),
			@AttributeOverride(name = "puntodeventa", column = @Column(name = "puntodeventa", nullable = false, length = 1)) })
	@NotNull
	public PersonaltipoprocesoId getId() {
		return this.id;
	}

	public void setId(PersonaltipoprocesoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "documento", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Personal getPersonal() {
		return this.personal;
	}

	public void setPersonal(Personal personal) {
		this.personal = personal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "puntodeventa", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Puntodeventa getPuntodeventa() {
		return this.puntodeventa;
	}

	public void setPuntodeventa(Puntodeventa puntodeventa) {
		this.puntodeventa = puntodeventa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipoproceso", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Tipoproceso getTipoproceso() {
		return this.tipoproceso;
	}

	public void setTipoproceso(Tipoproceso tipoproceso) {
		this.tipoproceso = tipoproceso;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fechafin", length = 13)
	public Date getFechafin() {
		return this.fechafin;
	}

	public void setFechafin(Date fechafin) {
		this.fechafin = fechafin;
	}

	@Column(name = "porcentaje", precision = 5, scale = 3)
	public BigDecimal getPorcentaje() {
		return this.porcentaje;
	}

	public void setPorcentaje(BigDecimal porcentaje) {
		this.porcentaje = porcentaje;
	}

}
